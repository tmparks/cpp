# Pipeline executes for default branch or when started from the web interface.
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web"

stages:          # List of stages for jobs, and their order of execution
  - .pre
  - build
  - test
  - deploy

variables:
  IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  LATEST: ${CI_REGISTRY_IMAGE}:latest

default:
  image: $IMAGE

build-image:     # This job runs in the .pre stage, wich runs first.
  stage: .pre
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull $LATEST || true
    - docker build --tag $IMAGE --cache-from $LATEST .
    - docker push $IMAGE

build-all:       # This job runs in the build stage.
  stage: build
  script:
    - cmake -S . -B build
    - make --directory=build all

# See (Test Coverage Examples)[https://docs.gitlab.com/ee/ci/pipelines/settings.html#test-coverage-examples]
unit-test-debug: # This job runs in the test stage.
  stage: test    # It only starts when the jobs in the build stage complete successfully.
  artifacts:
    when: always
    paths:
      - build/results/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/results/coverage.xml
      junit: build/results/test_detail.xml
  coverage: /TOTAL.*\s+(\d+)%/
  script:
    - cmake -DCMAKE_BUILD_TYPE=Debug -S . -B build
    - make --directory=build all test coverage

unit-test-release: # This job also runs in the test stage.
  stage: test
  artifacts:
    when: always
    paths:
      - build/results/
    reports:
      junit: build/results/test_detail.xml
  coverage: /TOTAL.*\s+(\d+)%/
  script:
    - cmake -DCMAKE_BUILD_TYPE=Release -S . -B build
    - make --directory=build all test

lint-test:       # This job also runs in the test stage.
  stage: test    # It can run at the same time as other jobs in the test stage (in parallel).
  script:
    - cmake -DCMAKE_BUILD_TYPE=Debug -S . -B build
    - make --directory=build check

latest:          # This job runs in the deploy stage.
  stage: deploy  # It only runs when the jobs in the test stage complete successfully.
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull $IMAGE
    - docker tag $IMAGE $LATEST
    - docker push $LATEST
    
pages:           # This job must be named "pages"
  stage: deploy
  dependencies:
    - unit-test-debug-job
  artifacts:
    paths:
      - public/
  script:
    - mv build/results/ public/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
